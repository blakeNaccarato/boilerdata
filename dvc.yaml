stages:
  axes:
    cmd: "python -m boilerdata.stages.axes"
    deps:
      - "${dirs.stage_axes}"
      - "${dirs.stage_setup}"
      - "${dirs.config}/axes.yaml"
      - "${dirs.models}/axes.py"
      - "${dirs.models}/dirs.py"
    outs:
      - "${dirs.axes}"

  schema:
    cmd: "python -m boilerdata.stages.schema"
    deps:
      - "${dirs.stage_schema}"
      - "${dirs.axes}"
      - "${dirs.models}"
    outs:
      - "${dirs.project_schema}"

  modelfun:
    cmd: "jupyter execute ${dirs.stage_modelfun}"
    deps:
      - "${dirs.stage_modelfun}"
      - "${dirs.axes}"
      - "${dirs.models}"
    outs:
      - "${dirs.modelfun}"
    params:
      - "params.model_inputs"
      - "params.model_params"
      - "params.fixed_params"

  runs:
    cmd: "python -m boilerdata.stages.runs"
    deps:
      - "${dirs.stage_runs}"
      - "${dirs.axes}"
      - "${dirs.trials}"
      - "${dirs.models}"
    outs:
      - "${dirs.runs}"
    params:
      - "params.records_to_average"

  pipeline:
    cmd: "python -m boilerdata.stages.pipeline"
    deps:
      - "${dirs.stage_pipeline}"
      - "${dirs.modelfun}"
      - "${dirs.runs}"
      - "${dirs.validation}"
    outs:
      - "${dirs.results}"
    params:
      - "params.initial_values"
      - "params.model_bounds"

  metrics:
    cmd: "jupyter execute ${dirs.stage_modelfun}"
    deps:
      - "${dirs.stage_metrics}"
      - "${dirs.results}"
    outs:
      - "${dirs.new_fits}"
    metrics:
      - "${dirs.file_pipeline_metrics}"
    plots:
      - "${dirs.file_pipeline_metrics_plot}"
      - "${dirs.plot_new_fit_0}"
      - "${dirs.plot_new_fit_1}"
      - "${dirs.plot_new_fit_2}"
      - "${dirs.plot_median_error_by_joint}"
      - "${dirs.plot_max_error_by_joint}"
      - "${dirs.plot_median_error_by_range}"
      - "${dirs.plot_max_error_by_range}"
    params:
      - "params.do_plot"

  literature:
    cmd: "python -m boilerdata.stages.literature"
    deps:
      - "${dirs.stage_literature}"
      - "${dirs.literature}"
      - "${dirs.models}/dirs.py"
    outs:
      - "${dirs.literature_results}"

  originlab:
    cmd: "python -m boilerdata.stages.originlab"
    deps:
      - "${dirs.stage_originlab}"
      - "${dirs.results}"
      - "${dirs.literature_results}"
      - "${dirs.plotter}"
    outs:
      - "${dirs.originlab_results}"
    plots:
      - "${dirs.metrics}/lit_.png"
    frozen: true
