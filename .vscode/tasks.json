// Calling `pwsh` first leverages my personal $PROFILE to activate `.venv`.
// Alternatively, we could use `.venv/Scripts/python.exe` and change the `args`, but
// this is platform-specific anyways.

{
  "version": "2.0.0",
  "tasks": [
    // * -------------------------------------------------------------------------- * //
    // * PROJECT-SPECIFIC * //
    {
      "label": "boilerdata: Update 'trials' schema",
      "type": "process",
      "command": "pwsh",
      "args": ["-Command", "boilerdata configs schema trials"],
      "problemMatcher": []
    },

    // * -------------------------------------------------------------------------- * //
    // * GIT * //
    {
      "label": "git: Rebase back to fork",
      "type": "process",
      "command": "git",
      "args": ["rebase", "-i", "--fork-point", "main"],
      "problemMatcher": []
    },

    // * -------------------------------------------------------------------------- * //
    // * PROJECT SETUP * //
    {
      "label": "setup: Initialize template",
      "type": "process",
      "command": "pwsh",
      "args": [".tools/scripts/init_template.ps1"],
      "problemMatcher": []
    },
    {
      "label": "setup: Setup project",
      "type": "process",
      "command": "pwsh",
      "args": ["setup.ps1"],
      "problemMatcher": []
    },
    {
      "label": "setup: Update project",
      "type": "process",
      "command": "pwsh",
      "args": ["update.ps1"],
      "problemMatcher": []
    },

    // * -------------------------------------------------------------------------- * //
    // * PRE-COMMIT * //

    {
      "label": "pre-commit: All files",
      "type": "process",
      "command": "pwsh",
      "args": ["-Command", "pre-commit run --all-files"],
      "problemMatcher": []
    },
    {
      "label": "pre-commit: Current file",
      "type": "process",
      "command": "pwsh",
      "args": ["-Command", "pre-commit run --files ${file}"],
      "problemMatcher": []
    },

    // * -------------------------------------------------------------------------- * //
    // * OTHER TASKS * //

    {
      "label": "task: pytest-cov",
      "type": "process",
      "command": ".venv/Scripts/python.exe",
      "args": ["-m", "pytest", "-q", "-ra", "--cov", "--cov-report", "xml"],
      "problemMatcher": []
    },
    {
      "label": "task: Remove *.rej",
      "type": "process",

      "command": "pwsh",
      "args": [
        "-Command",
        "Get-ChildItem -Recurse -Filter *.rej | Remove-Item"
      ],
      "problemMatcher": []
    },
    {
      "label": "task: Ignore magic comma in all project files",
      "type": "process",
      "command": "pwsh",
      "args": ["-Command", "black -C src tests"],
      "problemMatcher": []
    }
  ]
}
